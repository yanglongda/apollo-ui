{"remainingRequest":"/Users/long/Desktop/apollo-ui/node_modules/babel-loader/lib/index.js!/Users/long/Desktop/apollo-ui/src/router/index.js","dependencies":[{"path":"/Users/long/Desktop/apollo-ui/src/router/index.js","mtime":1599124856350},{"path":"/Users/long/Desktop/apollo-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/long/Desktop/apollo-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nVue.use(Router);\n/* Layout */\n\nimport Layout from '@/layout';\n/**\r\n * Note: 路由配置项\r\n *\r\n * hidden: true                   // 当设置 true 的时候该路由不会再侧边栏出现 如401，login等页面，或者如一些编辑页面/edit/1\r\n * alwaysShow: true               // 当你一个路由下面的 children 声明的路由大于1个时，自动会变成嵌套的模式--如组件页面\r\n *                                // 只有一个时，会将那个子路由当做根路由显示在侧边栏--如引导页面\r\n *                                // 若你想不管路由下面的 children 声明的个数都显示你的根路由\r\n *                                // 你可以设置 alwaysShow: true，这样它就会忽略之前定义的规则，一直显示根路由\r\n * redirect: noRedirect           // 当设置 noRedirect 的时候该路由在面包屑导航中不可被点击\r\n * name:'router-name'             // 设定路由的名字，一定要填写不然使用<keep-alive>时会出现各种问题\r\n * meta : {\r\n    roles: ['admin','editor']    // 设置该路由进入的权限，支持多个权限叠加\r\n    title: 'title'               // 设置该路由在侧边栏和面包屑中展示的名字\r\n    icon: 'svg-name'             // 设置该路由的图标，对应路径src/icons/svg\r\n    breadcrumb: false            // 如果设置为false，则不会在breadcrumb面包屑中显示\r\n  }\r\n */\n// 公共路由\n\nexport var constantRoutes = [{\n  path: '/redirect',\n  component: Layout,\n  hidden: true,\n  children: [{\n    path: '/redirect/:path(.*)',\n    component: function component(resolve) {\n      return require(['@/views/redirect'], resolve);\n    }\n  }]\n}, // {\n//   path: '/login',\n//   component: (resolve) => require(['@/views/login'], resolve),\n//   hidden: true\n// },\n{\n  path: '/404',\n  component: function component(resolve) {\n    return require(['@/views/error/404'], resolve);\n  },\n  hidden: true\n}, {\n  path: '/401',\n  component: function component(resolve) {\n    return require(['@/views/error/401'], resolve);\n  },\n  hidden: true\n}, {\n  path: '',\n  component: Layout,\n  alwaysShow: true,\n  redirect: 'index',\n  children: [{\n    path: 'index',\n    component: function component(resolve) {\n      return require(['@/views/index'], resolve);\n    },\n    name: '首页',\n    meta: {\n      title: '首页',\n      icon: 'dashboard',\n      noCache: true,\n      affix: true\n    }\n  }]\n}, {\n  path: '/user',\n  component: Layout,\n  hidden: true,\n  redirect: 'noredirect',\n  children: [{\n    path: 'profile',\n    component: function component(resolve) {\n      return require(['@/views/system/user/profile/index'], resolve);\n    },\n    name: 'Profile',\n    meta: {\n      title: '个人中心',\n      icon: 'user'\n    }\n  }]\n}, {\n  path: '/organization',\n  component: Layout,\n  name: 'organization',\n  hidden: false,\n  redirect: 'noredirect',\n  meta: {\n    title: \"组织管理\",\n    icon: \"system\"\n  },\n  children: [{\n    path: 'department',\n    name: \"department\",\n    component: function component(resolve) {\n      return require(['@/views/organization/department/index'], resolve);\n    },\n    meta: {\n      title: \"部门管理\",\n      icon: \"form\"\n    }\n  }, {\n    path: 'post',\n    name: \"post\",\n    component: function component(resolve) {\n      return require(['@/views/organization/post/index'], resolve);\n    },\n    meta: {\n      title: \"岗位管理\",\n      icon: \"form\"\n    }\n  }]\n}, {\n  path: '/userManagement',\n  component: Layout,\n  name: 'userManagement',\n  hidden: false,\n  redirect: 'noredirect',\n  meta: {\n    title: \"用户管理\",\n    icon: \"system\"\n  },\n  children: [{\n    path: 'userList',\n    name: \"userList\",\n    component: function component(resolve) {\n      return require(['@/views/userManagement/userList/index'], resolve);\n    },\n    meta: {\n      title: \"用户列表\",\n      icon: \"form\"\n    }\n  }]\n}];\nexport default new Router({\n  mode: 'history',\n  // 去掉url中的#\n  scrollBehavior: function scrollBehavior() {\n    return {\n      y: 0\n    };\n  },\n  routes: constantRoutes\n});",{"version":3,"sources":["/Users/long/Desktop/apollo-ui/src/router/index.js"],"names":["Vue","Router","use","Layout","constantRoutes","path","component","hidden","children","resolve","require","alwaysShow","redirect","name","meta","title","icon","noCache","affix","mode","scrollBehavior","y","routes"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Router from 'vue-router'\r\n\r\nVue.use(Router)\r\n\r\n/* Layout */\r\nimport Layout from '@/layout'\r\n\r\n/**\r\n * Note: 路由配置项\r\n *\r\n * hidden: true                   // 当设置 true 的时候该路由不会再侧边栏出现 如401，login等页面，或者如一些编辑页面/edit/1\r\n * alwaysShow: true               // 当你一个路由下面的 children 声明的路由大于1个时，自动会变成嵌套的模式--如组件页面\r\n *                                // 只有一个时，会将那个子路由当做根路由显示在侧边栏--如引导页面\r\n *                                // 若你想不管路由下面的 children 声明的个数都显示你的根路由\r\n *                                // 你可以设置 alwaysShow: true，这样它就会忽略之前定义的规则，一直显示根路由\r\n * redirect: noRedirect           // 当设置 noRedirect 的时候该路由在面包屑导航中不可被点击\r\n * name:'router-name'             // 设定路由的名字，一定要填写不然使用<keep-alive>时会出现各种问题\r\n * meta : {\r\n    roles: ['admin','editor']    // 设置该路由进入的权限，支持多个权限叠加\r\n    title: 'title'               // 设置该路由在侧边栏和面包屑中展示的名字\r\n    icon: 'svg-name'             // 设置该路由的图标，对应路径src/icons/svg\r\n    breadcrumb: false            // 如果设置为false，则不会在breadcrumb面包屑中显示\r\n  }\r\n */\r\n\r\n// 公共路由\r\nexport const constantRoutes = [\r\n  {\r\n    path: '/redirect',\r\n    component: Layout,\r\n    hidden: true,\r\n    children: [\r\n      {\r\n        path: '/redirect/:path(.*)',\r\n        component: (resolve) => require(['@/views/redirect'], resolve)\r\n      }\r\n    ]\r\n  },\r\n  // {\r\n  //   path: '/login',\r\n  //   component: (resolve) => require(['@/views/login'], resolve),\r\n  //   hidden: true\r\n  // },\r\n  {\r\n    path: '/404',\r\n    component: (resolve) => require(['@/views/error/404'], resolve),\r\n    hidden: true\r\n  },\r\n  {\r\n    path: '/401',\r\n    component: (resolve) => require(['@/views/error/401'], resolve),\r\n    hidden: true\r\n  },\r\n  {\r\n    path: '',\r\n    component: Layout,\r\n    alwaysShow: true,\r\n    redirect: 'index',\r\n    children: [\r\n      {\r\n        path: 'index',\r\n        component: (resolve) => require(['@/views/index'], resolve),\r\n        name: '首页',\r\n        meta: { title: '首页', icon: 'dashboard', noCache: true, affix: true }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '/user',\r\n    component: Layout,\r\n    hidden: true,\r\n    redirect: 'noredirect',\r\n    children: [\r\n      {\r\n        path: 'profile',\r\n        component: (resolve) => require(['@/views/system/user/profile/index'], resolve),\r\n        name: 'Profile',\r\n        meta: { title: '个人中心', icon: 'user' }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path:'/organization',\r\n    component:Layout,\r\n   \r\n    name:'organization',\r\n    hidden:false,\r\n    redirect:'noredirect',\r\n    meta:{\r\n      title:\"组织管理\",icon:\"system\"\r\n    },\r\n    children:[\r\n      {\r\n        path:'department',\r\n        name:\"department\",\r\n        component: (resolve) => require(['@/views/organization/department/index'], resolve),\r\n        meta:{\r\n          title:\"部门管理\",icon:\"form\"\r\n        },\r\n      },\r\n      {\r\n        path:'post',\r\n        name:\"post\",\r\n        component: (resolve) => require(['@/views/organization/post/index'], resolve),\r\n        meta:{\r\n          title:\"岗位管理\",icon:\"form\"\r\n        },\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path:'/userManagement',\r\n    component:Layout,\r\n   \r\n    name:'userManagement',\r\n    hidden:false,\r\n    redirect:'noredirect',\r\n    meta:{\r\n      title:\"用户管理\",icon:\"system\"\r\n    },\r\n    children:[\r\n      {\r\n        path:'userList',\r\n        name:\"userList\",\r\n        component: (resolve) => require(['@/views/userManagement/userList/index'], resolve),\r\n        meta:{\r\n          title:\"用户列表\",icon:\"form\"\r\n        },\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\nexport default new Router({\r\n  mode: 'history', // 去掉url中的#\r\n  scrollBehavior: () => ({ y: 0 }),\r\n  routes: constantRoutes\r\n})\r\n"]}]}