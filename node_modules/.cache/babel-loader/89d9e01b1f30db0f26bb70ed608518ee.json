{"remainingRequest":"/Users/long/Desktop/apollo-ui/node_modules/babel-loader/lib/index.js!/Users/long/Desktop/apollo-ui/src/store/modules/permission.js","dependencies":[{"path":"/Users/long/Desktop/apollo-ui/src/store/modules/permission.js","mtime":1598605951756},{"path":"/Users/long/Desktop/apollo-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/long/Desktop/apollo-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { constantRoutes } from '@/router';\nimport { getRouters } from '@/api/config';\nimport Layout from '@/layout/index';\nvar permission = {\n  state: {\n    routes: [],\n    addRoutes: []\n  },\n  mutations: {\n    SET_ROUTES: function SET_ROUTES(state, routes) {\n      state.addRoutes = routes;\n      state.routes = constantRoutes.concat(routes);\n    }\n  },\n  actions: {\n    // 生成路由\n    GenerateRoutes: function GenerateRoutes(_ref) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve) {\n        // 向后端请求路由数据\n        getRouters().then(function (res) {\n          var accessedRoutes = filterAsyncRouter(res.data);\n          accessedRoutes.push({\n            path: '*',\n            redirect: '/404',\n            hidden: true\n          });\n          commit('SET_ROUTES', accessedRoutes);\n          resolve(accessedRoutes);\n        });\n      });\n    }\n  }\n}; // 遍历后台传来的路由字符串，转换为组件对象\n\nfunction filterAsyncRouter(asyncRouterMap) {\n  return asyncRouterMap.filter(function (route) {\n    if (route.component) {\n      // Layout组件特殊处理\n      if (route.component === 'Layout') {\n        route.component = Layout;\n      } else {\n        route.component = loadView(route.component);\n      }\n    }\n\n    if (route.children != null && route.children && route.children.length) {\n      route.children = filterAsyncRouter(route.children);\n    }\n\n    return true;\n  });\n}\n\nexport var loadView = function loadView(view) {\n  // 路由懒加载\n  return function (resolve) {\n    return require([\"@/views/\".concat(view)], resolve);\n  };\n};\nexport default permission;",{"version":3,"sources":["/Users/long/Desktop/apollo-ui/src/store/modules/permission.js"],"names":["constantRoutes","getRouters","Layout","permission","state","routes","addRoutes","mutations","SET_ROUTES","concat","actions","GenerateRoutes","commit","Promise","resolve","then","res","accessedRoutes","filterAsyncRouter","data","push","path","redirect","hidden","asyncRouterMap","filter","route","component","loadView","children","length","view","require"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,SAAS,EAAE;AAFN,GADU;AAKjBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE,oBAACJ,KAAD,EAAQC,MAAR,EAAmB;AAC7BD,MAAAA,KAAK,CAACE,SAAN,GAAkBD,MAAlB;AACAD,MAAAA,KAAK,CAACC,MAAN,GAAeL,cAAc,CAACS,MAAf,CAAsBJ,MAAtB,CAAf;AACD;AAJQ,GALM;AAWjBK,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,cAFO,gCAEoB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AACzB,aAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5B;AACAb,QAAAA,UAAU,GAAGc,IAAb,CAAkB,UAAAC,GAAG,EAAI;AACvB,cAAMC,cAAc,GAAGC,iBAAiB,CAACF,GAAG,CAACG,IAAL,CAAxC;AACAF,UAAAA,cAAc,CAACG,IAAf,CAAoB;AAAEC,YAAAA,IAAI,EAAE,GAAR;AAAaC,YAAAA,QAAQ,EAAE,MAAvB;AAA+BC,YAAAA,MAAM,EAAE;AAAvC,WAApB;AACAX,UAAAA,MAAM,CAAC,YAAD,EAAeK,cAAf,CAAN;AACAH,UAAAA,OAAO,CAACG,cAAD,CAAP;AACD,SALD;AAMD,OARM,CAAP;AASD;AAZM;AAXQ,CAAnB,C,CA2BA;;AACA,SAASC,iBAAT,CAA2BM,cAA3B,EAA2C;AACzC,SAAOA,cAAc,CAACC,MAAf,CAAsB,UAAAC,KAAK,EAAI;AACpC,QAAIA,KAAK,CAACC,SAAV,EAAqB;AACnB;AACA,UAAID,KAAK,CAACC,SAAN,KAAoB,QAAxB,EAAkC;AAChCD,QAAAA,KAAK,CAACC,SAAN,GAAkBzB,MAAlB;AACD,OAFD,MAEO;AACLwB,QAAAA,KAAK,CAACC,SAAN,GAAkBC,QAAQ,CAACF,KAAK,CAACC,SAAP,CAA1B;AACD;AACF;;AACD,QAAID,KAAK,CAACG,QAAN,IAAkB,IAAlB,IAA0BH,KAAK,CAACG,QAAhC,IAA4CH,KAAK,CAACG,QAAN,CAAeC,MAA/D,EAAuE;AACrEJ,MAAAA,KAAK,CAACG,QAAN,GAAiBX,iBAAiB,CAACQ,KAAK,CAACG,QAAP,CAAlC;AACD;;AACD,WAAO,IAAP;AACD,GAbM,CAAP;AAcD;;AAED,OAAO,IAAMD,QAAQ,GAAG,SAAXA,QAAW,CAACG,IAAD,EAAU;AAAE;AAClC,SAAO,UAACjB,OAAD;AAAA,WAAckB,OAAO,CAAC,mBAAYD,IAAZ,EAAD,EAAsBjB,OAAtB,CAArB;AAAA,GAAP;AACD,CAFM;AAIP,eAAeX,UAAf","sourcesContent":["import { constantRoutes } from '@/router'\r\nimport { getRouters } from '@/api/config'\r\nimport Layout from '@/layout/index'\r\n\r\nconst permission = {\r\n  state: {\r\n    routes: [],\r\n    addRoutes: []\r\n  },\r\n  mutations: {\r\n    SET_ROUTES: (state, routes) => {\r\n      state.addRoutes = routes\r\n      state.routes = constantRoutes.concat(routes)\r\n    }\r\n  },\r\n  actions: {\r\n    // 生成路由\r\n    GenerateRoutes({ commit }) {\r\n      return new Promise(resolve => {\r\n        // 向后端请求路由数据\r\n        getRouters().then(res => {\r\n          const accessedRoutes = filterAsyncRouter(res.data)\r\n          accessedRoutes.push({ path: '*', redirect: '/404', hidden: true })\r\n          commit('SET_ROUTES', accessedRoutes)\r\n          resolve(accessedRoutes)\r\n        })\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n// 遍历后台传来的路由字符串，转换为组件对象\r\nfunction filterAsyncRouter(asyncRouterMap) {\r\n  return asyncRouterMap.filter(route => {\r\n    if (route.component) {\r\n      // Layout组件特殊处理\r\n      if (route.component === 'Layout') {\r\n        route.component = Layout\r\n      } else {\r\n        route.component = loadView(route.component)\r\n      }\r\n    }\r\n    if (route.children != null && route.children && route.children.length) {\r\n      route.children = filterAsyncRouter(route.children)\r\n    }\r\n    return true\r\n  })\r\n}\r\n\r\nexport const loadView = (view) => { // 路由懒加载\r\n  return (resolve) =>  require([`@/views/${view}`], resolve)\r\n}\r\n\r\nexport default permission\r\n"]}]}