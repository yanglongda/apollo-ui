{"remainingRequest":"/Users/long/Desktop/apollo-ui/node_modules/babel-loader/lib/index.js!/Users/long/Desktop/apollo-ui/src/permission.js","dependencies":[{"path":"/Users/long/Desktop/apollo-ui/src/permission.js","mtime":1598605951755},{"path":"/Users/long/Desktop/apollo-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/long/Desktop/apollo-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/long/Desktop/apollo-ui/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport { Message } from 'element-ui';\nimport NProgress from 'nprogress';\nimport 'nprogress/nprogress.css';\nimport { getToken } from '@/utils/auth';\nNProgress.configure({\n  showSpinner: false\n});\nvar whiteList = ['/login', '/auth-redirect', '/bind', '/register'];\nrouter.beforeEach(function (to, from, next) {\n  NProgress.start();\n\n  if (getToken()) {\n    /* has token*/\n    if (to.path === '/login') {\n      next({\n        path: '/'\n      });\n      NProgress.done();\n    } else {\n      if (store.getters.roles.length === 0) {\n        // 判断当前用户是否已拉取完user_info信息\n        store.dispatch('GetInfo').then(function (res) {\n          // 拉取user_info\n          var roles = res.roles;\n          store.dispatch('GenerateRoutes', {\n            roles: roles\n          }).then(function (accessRoutes) {\n            // 测试 默认静态页面\n            // store.dispatch('permission/generateRoutes', { roles }).then(accessRoutes => {\n            // 根据roles权限生成可访问的路由表\n            router.addRoutes(accessRoutes); // 动态添加可访问路由表\n\n            next(_objectSpread(_objectSpread({}, to), {}, {\n              replace: true\n            })); // hack方法 确保addRoutes已完成\n          });\n        }).catch(function (err) {\n          store.dispatch('FedLogOut').then(function () {\n            Message.error(err);\n            next({\n              path: '/'\n            });\n          });\n        });\n      } else {\n        next(); // 没有动态改变权限的需求可直接next() 删除下方权限判断 ↓\n        // if (hasPermission(store.getters.roles, to.meta.roles)) {\n        //   next()\n        // } else {\n        //   next({ path: '/401', replace: true, query: { noGoBack: true }})\n        // }\n        // 可删 ↑\n      }\n    }\n  } else {\n    // 没有token\n    if (whiteList.indexOf(to.path) !== -1) {\n      // 在免登录白名单，直接进入\n      next();\n    } else {\n      next(\"/login?redirect=\".concat(to.path)); // 否则全部重定向到登录页\n\n      NProgress.done();\n    }\n  }\n});\nrouter.afterEach(function () {\n  NProgress.done();\n});",{"version":3,"sources":["/Users/long/Desktop/apollo-ui/src/permission.js"],"names":["router","store","Message","NProgress","getToken","configure","showSpinner","whiteList","beforeEach","to","from","next","start","path","done","getters","roles","length","dispatch","then","res","accessRoutes","addRoutes","replace","catch","err","error","indexOf","afterEach"],"mappings":";AAAA,OAAOA,MAAP;AACA,OAAOC,KAAP;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAO,yBAAP;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEAD,SAAS,CAACE,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB;AAEA,IAAMC,SAAS,GAAG,CAAC,QAAD,EAAW,gBAAX,EAA6B,OAA7B,EAAsC,WAAtC,CAAlB;AAEAP,MAAM,CAACQ,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpCR,EAAAA,SAAS,CAACS,KAAV;;AACA,MAAIR,QAAQ,EAAZ,EAAgB;AACd;AACA,QAAIK,EAAE,CAACI,IAAH,KAAY,QAAhB,EAA0B;AACxBF,MAAAA,IAAI,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAJ;AACAV,MAAAA,SAAS,CAACW,IAAV;AACD,KAHD,MAGO;AACL,UAAIb,KAAK,CAACc,OAAN,CAAcC,KAAd,CAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AACpC;AACAhB,QAAAA,KAAK,CAACiB,QAAN,CAAe,SAAf,EAA0BC,IAA1B,CAA+B,UAAAC,GAAG,EAAI;AACpC;AACA,cAAMJ,KAAK,GAAGI,GAAG,CAACJ,KAAlB;AACAf,UAAAA,KAAK,CAACiB,QAAN,CAAe,gBAAf,EAAiC;AAAEF,YAAAA,KAAK,EAALA;AAAF,WAAjC,EAA4CG,IAA5C,CAAiD,UAAAE,YAAY,EAAI;AACjE;AACA;AACE;AACArB,YAAAA,MAAM,CAACsB,SAAP,CAAiBD,YAAjB,EAJ+D,CAIhC;;AAC/BV,YAAAA,IAAI,iCAAMF,EAAN;AAAUc,cAAAA,OAAO,EAAE;AAAnB,eAAJ,CAL+D,CAKhC;AAChC,WAND;AAOD,SAVD,EAWGC,KAXH,CAWS,UAAAC,GAAG,EAAI;AACZxB,UAAAA,KAAK,CAACiB,QAAN,CAAe,WAAf,EAA4BC,IAA5B,CAAiC,YAAM;AACrCjB,YAAAA,OAAO,CAACwB,KAAR,CAAcD,GAAd;AACAd,YAAAA,IAAI,CAAC;AAAEE,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAJ;AACD,WAHD;AAID,SAhBH;AAiBD,OAnBD,MAmBO;AACLF,QAAAA,IAAI,GADC,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF;AACF,GApCD,MAoCO;AACL;AACA,QAAIJ,SAAS,CAACoB,OAAV,CAAkBlB,EAAE,CAACI,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACrC;AACAF,MAAAA,IAAI;AACL,KAHD,MAGO;AACLA,MAAAA,IAAI,2BAAoBF,EAAE,CAACI,IAAvB,EAAJ,CADK,CAC8B;;AACnCV,MAAAA,SAAS,CAACW,IAAV;AACD;AACF;AACF,CAhDD;AAkDAd,MAAM,CAAC4B,SAAP,CAAiB,YAAM;AACrBzB,EAAAA,SAAS,CAACW,IAAV;AACD,CAFD","sourcesContent":["import router from './router'\r\nimport store from './store'\r\nimport { Message } from 'element-ui'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\nimport { getToken } from '@/utils/auth'\r\n\r\nNProgress.configure({ showSpinner: false })\r\n\r\nconst whiteList = ['/login', '/auth-redirect', '/bind', '/register']\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  NProgress.start()\r\n  if (getToken()) {\r\n    /* has token*/\r\n    if (to.path === '/login') {\r\n      next({ path: '/' })\r\n      NProgress.done()\r\n    } else {\r\n      if (store.getters.roles.length === 0) {\r\n        // 判断当前用户是否已拉取完user_info信息\r\n        store.dispatch('GetInfo').then(res => {\r\n          // 拉取user_info\r\n          const roles = res.roles\r\n          store.dispatch('GenerateRoutes', { roles }).then(accessRoutes => {\r\n          // 测试 默认静态页面\r\n          // store.dispatch('permission/generateRoutes', { roles }).then(accessRoutes => {\r\n            // 根据roles权限生成可访问的路由表\r\n            router.addRoutes(accessRoutes) // 动态添加可访问路由表\r\n            next({ ...to, replace: true }) // hack方法 确保addRoutes已完成\r\n          })\r\n        })\r\n          .catch(err => {\r\n            store.dispatch('FedLogOut').then(() => {\r\n              Message.error(err)\r\n              next({ path: '/' })\r\n            })\r\n          })\r\n      } else {\r\n        next()\r\n        // 没有动态改变权限的需求可直接next() 删除下方权限判断 ↓\r\n        // if (hasPermission(store.getters.roles, to.meta.roles)) {\r\n        //   next()\r\n        // } else {\r\n        //   next({ path: '/401', replace: true, query: { noGoBack: true }})\r\n        // }\r\n        // 可删 ↑\r\n      }\r\n    }\r\n  } else {\r\n    // 没有token\r\n    if (whiteList.indexOf(to.path) !== -1) {\r\n      // 在免登录白名单，直接进入\r\n      next()\r\n    } else {\r\n      next(`/login?redirect=${to.path}`) // 否则全部重定向到登录页\r\n      NProgress.done()\r\n    }\r\n  }\r\n})\r\n\r\nrouter.afterEach(() => {\r\n  NProgress.done()\r\n})\r\n"]}]}