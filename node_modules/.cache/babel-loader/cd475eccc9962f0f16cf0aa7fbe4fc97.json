{"remainingRequest":"/Users/long/Desktop/apollo-ui/node_modules/babel-loader/lib/index.js!/Users/long/Desktop/apollo-ui/src/permission.js","dependencies":[{"path":"/Users/long/Desktop/apollo-ui/src/permission.js","mtime":1599125338416},{"path":"/Users/long/Desktop/apollo-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/long/Desktop/apollo-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// import router from './router'\n// import store from './store'\n// import { Message } from 'element-ui'\n// import NProgress from 'nprogress'\n// import 'nprogress/nprogress.css'\n// import { getToken } from '@/utils/auth'\n// NProgress.configure({ showSpinner: false })\n// const whiteList = ['/login', '/auth-redirect', '/bind', '/register']\n// router.beforeEach((to, from, next) => {\n//   NProgress.start()\n//   if (getToken()) {\n//     /* has token*/\n//     if (to.path === '/login') {\n//       next({ path: '/' })\n//       NProgress.done()\n//     } else {\n//       if (store.getters.roles.length === 0) {\n//         // 判断当前用户是否已拉取完user_info信息\n//         store.dispatch('GetInfo').then(res => {\n//           // 拉取user_info\n//           const roles = res.roles\n//           store.dispatch('GenerateRoutes', { roles }).then(accessRoutes => {\n//           // 测试 默认静态页面\n//           // store.dispatch('permission/generateRoutes', { roles }).then(accessRoutes => {\n//             // 根据roles权限生成可访问的路由表\n//             router.addRoutes(accessRoutes) // 动态添加可访问路由表\n//             next({ ...to, replace: true }) // hack方法 确保addRoutes已完成\n//           })\n//         })\n//           .catch(err => {\n//             store.dispatch('FedLogOut').then(() => {\n//               Message.error(err)\n//               next({ path: '/' })\n//             })\n//           })\n//       } else {\n//         next()\n//         // 没有动态改变权限的需求可直接next() 删除下方权限判断 ↓\n//         // if (hasPermission(store.getters.roles, to.meta.roles)) {\n//         //   next()\n//         // } else {\n//         //   next({ path: '/401', replace: true, query: { noGoBack: true }})\n//         // }\n//         // 可删 ↑\n//       }\n//     }\n//   } else {\n//     // 没有token\n//     if (whiteList.indexOf(to.path) !== -1) {\n//       // 在免登录白名单，直接进入\n//       next()\n//     } else {\n//       next(`/login?redirect=${to.path}`) // 否则全部重定向到登录页\n//       NProgress.done()\n//     }\n//   }\n// })\n// router.afterEach(() => {\n//   NProgress.done()\n// })",{"version":3,"sources":["/Users/long/Desktop/apollo-ui/src/permission.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["// import router from './router'\r\n// import store from './store'\r\n// import { Message } from 'element-ui'\r\n// import NProgress from 'nprogress'\r\n// import 'nprogress/nprogress.css'\r\n// import { getToken } from '@/utils/auth'\r\n\r\n// NProgress.configure({ showSpinner: false })\r\n\r\n// const whiteList = ['/login', '/auth-redirect', '/bind', '/register']\r\n\r\n// router.beforeEach((to, from, next) => {\r\n//   NProgress.start()\r\n//   if (getToken()) {\r\n//     /* has token*/\r\n//     if (to.path === '/login') {\r\n//       next({ path: '/' })\r\n//       NProgress.done()\r\n//     } else {\r\n//       if (store.getters.roles.length === 0) {\r\n//         // 判断当前用户是否已拉取完user_info信息\r\n//         store.dispatch('GetInfo').then(res => {\r\n//           // 拉取user_info\r\n//           const roles = res.roles\r\n//           store.dispatch('GenerateRoutes', { roles }).then(accessRoutes => {\r\n//           // 测试 默认静态页面\r\n//           // store.dispatch('permission/generateRoutes', { roles }).then(accessRoutes => {\r\n//             // 根据roles权限生成可访问的路由表\r\n//             router.addRoutes(accessRoutes) // 动态添加可访问路由表\r\n//             next({ ...to, replace: true }) // hack方法 确保addRoutes已完成\r\n//           })\r\n//         })\r\n//           .catch(err => {\r\n//             store.dispatch('FedLogOut').then(() => {\r\n//               Message.error(err)\r\n//               next({ path: '/' })\r\n//             })\r\n//           })\r\n//       } else {\r\n//         next()\r\n//         // 没有动态改变权限的需求可直接next() 删除下方权限判断 ↓\r\n//         // if (hasPermission(store.getters.roles, to.meta.roles)) {\r\n//         //   next()\r\n//         // } else {\r\n//         //   next({ path: '/401', replace: true, query: { noGoBack: true }})\r\n//         // }\r\n//         // 可删 ↑\r\n//       }\r\n//     }\r\n//   } else {\r\n//     // 没有token\r\n//     if (whiteList.indexOf(to.path) !== -1) {\r\n//       // 在免登录白名单，直接进入\r\n//       next()\r\n//     } else {\r\n//       next(`/login?redirect=${to.path}`) // 否则全部重定向到登录页\r\n//       NProgress.done()\r\n//     }\r\n//   }\r\n// })\r\n\r\n// router.afterEach(() => {\r\n//   NProgress.done()\r\n// })\r\n"]}]}