{"remainingRequest":"/Users/long/Desktop/apollo-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/long/Desktop/apollo-ui/src/layout/components/Sidebar/index.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/long/Desktop/apollo-ui/src/layout/components/Sidebar/index.vue","mtime":1599637038391},{"path":"/Users/long/Desktop/apollo-ui/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/long/Desktop/apollo-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/long/Desktop/apollo-ui/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/long/Desktop/apollo-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/long/Desktop/apollo-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n/deep/ #app .sidebar-container{\r\n    top:50px !important;\r\n}\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;AACA;AACA","file":"index.vue","sourceRoot":"src/layout/components/Sidebar","sourcesContent":["<template>\r\n    <div :class=\"{'has-logo':showLogo}\">\r\n        \r\n        <el-scrollbar wrap-class=\"scrollbar-wrapper\">\r\n            <el-menu\r\n                :default-active=\"activeMenu\"\r\n                :collapse=\"isCollapse\"\r\n                :background-color=\"variables.menuBg\"\r\n                :text-color=\"variables.menuText\"\r\n                :unique-opened=\"true\"\r\n                :active-text-color=\"settings.theme\"\r\n                :collapse-transition=\"false\"\r\n                mode=\"vertical\"\r\n            >\r\n                <sidebar-item\r\n                    v-for=\"(route, index) in constantRoutes\"\r\n                    :key=\"route.path  + index\"\r\n                    :item=\"route\"\r\n                    :base-path=\"route.path\"\r\n                />\r\n            </el-menu>\r\n        </el-scrollbar>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapState } from \"vuex\";\r\nimport Logo from \"./Logo\";\r\nimport SidebarItem from \"./SidebarItem\";\r\nimport Layout from '@/layout'\r\nimport variables from \"@/assets/styles/variables.scss\";\r\n//import {constantRoutes} from \"@/router/index\"\r\nexport default {\r\n    data(){\r\n        return{\r\n            constantRoutes:[{\r\n            path:'/organization',\r\n            component:Layout,\r\n        \r\n            name:'organization',\r\n            hidden:false,\r\n            redirect:'noredirect',\r\n            meta:{\r\n            title:\"组织管理\",icon:\"system\"\r\n            },\r\n            children:[\r\n            {\r\n                path:'department',\r\n                name:\"department\",\r\n                component: (resolve) => require(['@/views/organization/department/index'], resolve),\r\n                meta:{\r\n                title:\"部门管理\",icon:\"form\"\r\n                },\r\n            },\r\n            {\r\n                path:'post',\r\n                name:\"post\",\r\n                component: (resolve) => require(['@/views/organization/post/index'], resolve),\r\n                meta:{\r\n                title:\"岗位管理\",icon:\"form\"\r\n                },\r\n            },\r\n            ]\r\n        },\r\n        {\r\n            path:'/userManagement',\r\n            component:Layout,\r\n        \r\n            name:'userManagement',\r\n            hidden:false,\r\n            redirect:'noredirect',\r\n            meta:{\r\n            title:\"用户管理\",icon:\"system\"\r\n            },\r\n            children:[\r\n            {\r\n                path:'userList',\r\n                name:\"userList\",\r\n                component: (resolve) => require(['@/views/userManagement/userList/index'], resolve),\r\n                meta:{\r\n                title:\"用户列表\",icon:\"form\"\r\n                },\r\n            },{\r\n                path:'personal',\r\n                name:\"personal\",\r\n                component: (resolve) => require(['@/views/userManagement/personal/index'], resolve),\r\n                meta:{\r\n                title:\"个人中心\",icon:\"form\"\r\n                },\r\n            }\r\n            ]\r\n        }]\r\n        }\r\n    },\r\n    components: { SidebarItem, Logo },\r\n    computed: {\r\n        ...mapState([\"settings\"]),\r\n        ...mapGetters([\"permission_routes\", \"sidebar\"]),\r\n        activeMenu() {\r\n            const route = this.$route;\r\n            const { meta, path } = route;\r\n            // if set path, the sidebar will highlight the path you set\r\n            if (meta.activeMenu) {\r\n                return meta.activeMenu;\r\n            }\r\n            return path;\r\n        },\r\n        showLogo() {\r\n            return this.$store.state.settings.sidebarLogo;\r\n        },\r\n        variables() {\r\n            return variables;\r\n        },\r\n        isCollapse() {\r\n            return !this.sidebar.opened;\r\n        }\r\n    }\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n/deep/ #app .sidebar-container{\r\n    top:50px !important;\r\n}\r\n</style>"]}]}